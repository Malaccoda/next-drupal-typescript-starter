name: Deploy to Production
concurrency: production_environment

on:
  push:
    # branches: [ main ]
    tags: [ v0.*, v1.* ]
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      reason:
        # Friendly description to be shown in the UI instead of 'name'
        description: "reason to run"
        # Default value if no value is explicitly provided
        default: "rebuild production without push"
        # Input has to be provided for the workflow to run
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v3
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn
          # or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.[jt]s', '**/*.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # Setup key
      - run: set -eu
      - run: mkdir "$HOME/.ssh"
      - run: echo "${{ secrets.DEPLOY_KEY }}" > "$HOME/.ssh/key"
      - run: chmod 600 "$HOME/.ssh/key"

      # Build
      - run: yarn preci
      - run: yarn ci
      - run: yarn build
        env:
          DRUPAL_CLIENT_ID: ${{ secrets.DRUPAL_CLIENT_ID }}
          DRUPAL_CLIENT_SECRET: ${{ secrets.DRUPAL_CLIENT_SECRET }}
          DRUPAL_FRONT_PAGE: ${{ secrets.DRUPAL_FRONT_PAGE }}
          DRUPAL_PREVIEW_SECRET: ${{ secrets.DRUPAL_PREVIEW_SECRET }}
          DRUPAL_SITE_ID: ${{ secrets.DRUPAL_SITE_ID }}
          NEXT_IMAGE_DOMAIN: ${{ secrets.NEXT_IMAGE_DOMAIN }}
          NEXT_PUBLIC_DRUPAL_BASE_URL: ${{ secrets.NEXT_PUBLIC_DRUPAL_BASE_URL }}
          NEXT_PUBLIC_GA_ID: ${{ secrets.NEXT_PUBLIC_GA_ID }}
          NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_GA_MEASUREMENT_ID }}
          NEXT_PUBLIC_YM_ID: ${{ secrets.NEXT_PUBLIC_YM_ID }}

      # - run: cp ./public/robots-production.txt ./public/robots.txt

      # Deploy to custom server
      - run: rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress --delete --exclude '.next/standalone/.next/BUILD_ID' --exclude '.next/BUILD_ID' ./.next/standalone/ ${{ secrets.DEPLOY_HOST }}:/var/www/starter-frontend/
      - run: rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress ./.next/static/ ${{ secrets.DEPLOY_HOST }}:/var/www/starter-frontend/.next/static/
      - run: rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress ./public/ ${{ secrets.DEPLOY_HOST }}:/var/www/starter-frontend/public/
      - run: rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress ./pm2.config.js ${{ secrets.DEPLOY_HOST }}:/var/www/starter-frontend/
      - run: rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress ./.next/BUILD_ID ${{ secrets.DEPLOY_HOST }}:/var/www/starter-frontend/.next/BUILD_ID
